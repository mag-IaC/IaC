name: Terraform CD

on:
  workflow_run:
    workflows: ["Terraform CI"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  deploy_devandtest:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: pwsh

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main  # ensures we use the merged main branch

      # Step 2: Azure login via OIDC
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13.0

      - name: Deploy DEV
        working-directory: ./Oblig_2
        run: ./deploy.ps1 -environment dev
        shell: pwsh

      - name: Deploy TEST
        working-directory: ./Oblig_2
        run: ./deploy.ps1 -environment test
        shell: pwsh

  deploy_prod:
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        shell: pwsh

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main  # ensures we use the merged main branch

      # Step 2: Azure login via OIDC
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13.0

      - name: Deploy PROD
        working-directory: ./Oblig_2
        run: ./deploy.ps1 -environment prod
        shell: pwsh